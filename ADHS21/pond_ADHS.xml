<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.5//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_5.dtd'>
<nta>
	<declaration>// Global time. One time unit in Uppaal represents 1 minute
const int m = 1; // 1 minute = 1 time unit
const int h = 60*m; // 1 hour = 60 minutes
clock t; // global time [min]

// Urban catchment
const double UC_k = 0.25; // Urban surface resevoir reaction factor [cm/min * 1 / cm]
const double A_UC = 37.0 * 10000.0 * 10000.0; // urban area catchment [cm2], 1 ha = 10000 m2, 1 m2 = 10000 cm2 = [cm/(min*cm)]
double rain = 0.0; // Rainfall [cm/min]
clock S_UC = 0.0; // Water surface height urban catchment [cm]

// Rain detention pond
const int W = 300; // max water height [cm]
clock w = 100.0; // water level in pond [cm]
double Qout = 0.0; // pond outflow [cm3/min], will be properly initialized in Controller
clock o = 0.0; // accumelated overflow time [min]

// Cost function
clock c = 0.0; // cost function [-]</declaration>
	<template>
		<name>Pond</name>
		<declaration>// We assume as pond geometry an inverted pyramid with square base, where the base is the surface of the permanent water level. 
// H represents the height of the pyramid, L represents the area of the pyramid.
const double H = 1000000.0; // pond geometry H [cm]
const double L = 7464.5; // pond geometry L [cm], 7464.5 -&gt; 5572 m2 area

// Flow from urban catchment to pond. Eq. 2 in paper.
double Qin()
{
    return S_UC * UC_k * A_UC;
}

// Dynamics of the water level. Eqs. 4 and 5 in the paper combined.
double pond_dynamics()
{
    if (w &lt;= 0 &amp;&amp; Qin() &lt;= Qout) return 0;

    else if (w &gt;= W &amp;&amp; Qin() &gt;= Qout) return 0; 

    else return H*H/(L*L)/((w+H)*(w+H))*(Qin()-Qout);
}

// Cummulative overflow duration. Eq. 6 in the paper.
double overflow()
{
    const double epsilon = 0.1; // for numerical precision 
    if (w &gt;= W - epsilon) return 1.0;
    
    else return 0.0;
}</declaration>
		<location id="id0" x="0" y="0">
			<label kind="invariant" x="-76" y="17">w' == pond_dynamics() &amp;&amp;
o' == overflow()</label>
		</location>
		<init ref="id0"/>
	</template>
	<template>
		<name>CostFunction</name>
		<location id="id1" x="0" y="0">
			<label kind="invariant" x="-110" y="17">c' == 1 - w / W</label>
		</location>
		<init ref="id1"/>
	</template>
	<template>
		<name>UrbanCatchment</name>
		<location id="id2" x="0" y="0">
			<label kind="invariant" x="-85" y="17">S_UC' == rain - (S_UC * UC_k)</label>
		</location>
		<init ref="id2"/>
	</template>
	<template>
		<name>Controller</name>
		<declaration>const int P = h; // control switching period [min]
const double Qomax = 60.0 * 95000.0; // max outflow [cm3/min], 95000 cm3/s = 95 l/s
const int C = 3; // number of control modes
const double Qoutv[C] = {(1.0/6.0)*Qomax, (2.0/3.0)*Qomax, (3.0/3.0)*Qomax}; // outflow modes

clock x = 0.0; // control switching clock</declaration>
		<location id="id3" x="0" y="0">
			<label kind="invariant" x="-25" y="17">x &lt;= P</label>
		</location>
		<location id="id4" x="-178" y="0">
			<urgent/>
		</location>
		<location id="id5" x="102" y="0">
			<urgent/>
		</location>
		<init ref="id4"/>
		<transition id="id6">
			<source ref="id5"/>
			<target ref="id3"/>
			<label kind="select" x="17" y="-102">i:int[0,C-1]</label>
			<label kind="assignment" x="0" y="-85">x = 0, Qout = Qoutv[i]</label>
			<nail x="102" y="-59"/>
			<nail x="0" y="-59"/>
		</transition>
		<transition id="id7" controllable="false">
			<source ref="id3"/>
			<target ref="id5"/>
			<label kind="guard" x="34" y="8">x==P</label>
		</transition>
		<transition id="id8">
			<source ref="id4"/>
			<target ref="id3"/>
			<label kind="select" x="-127" y="-17">i:int[0,C-1]</label>
			<label kind="assignment" x="-144" y="0">Qout=Qoutv[i]</label>
		</transition>
	</template>
	<template>
		<name>Rain</name>
		<declaration>const int I = 6; // number of intervals. Simulation should finish before the last period is over. Therefore, last period is a large dummy period.
int i = 0; // current interval index

// Exact values =&gt; const int dryL[I] = {233*m, 71*m, 1529*m, 187*m, 226*m, 24*h};
const int dryL[I] = {210*m, 64*m, 1376*m, 168*m, 203*m, 24*h}; // lower bound duration dry period [min]
const int dryU[I] = {256*m, 78*m, 1682*m, 206*m, 249*m, 24*h}; // upper bound duration dry period [min]

// Exact values =&gt; const int rainL[I] = {30*m, 23*m, 55*m, 26*m, 231*m, 24*h};
const int rainL[I] = {27*m, 21*m, 49*m, 23*m, 208*m, 24*h}; // lower bound duration raining period [min]
const int rainU[I] = {33*m, 25*m, 61*m, 29*m, 254*m, 24*h}; // upper bound duration raining period [min]

const double rainmax[I] = {0.01333, 0.03478, 0.02545, 0.02308, 0.00952, 0.0}; // rain intensity [cm/min], 1 mm/min = 0.1 cm/min


clock d = 0.0; // duration of dry or raining period [min]
const double e = 0.1; // rain uncertainty factor.

// Returns a sample from a uniform distribution between lower and upper.
double uniform(double lower, double upper)
{
    double distance = upper - lower;
    double sample = random(distance);
    return lower + sample;
}</declaration>
		<location id="id9" x="-153" y="-8">
			<name x="-204" y="-17">Dry</name>
			<label kind="invariant" x="-221" y="8">d &lt;= dryU[i]</label>
		</location>
		<location id="id10" x="17" y="-8">
			<name x="34" y="-25">Raining</name>
			<label kind="invariant" x="25" y="0">d &lt;= rainU[i]</label>
		</location>
		<init ref="id9"/>
		<transition id="id11" controllable="false">
			<source ref="id10"/>
			<target ref="id9"/>
			<label kind="guard" x="-119" y="34">d &gt;= rainL[i]</label>
			<label kind="assignment" x="-119" y="51">d = 0,
i++,
rain = 0.0</label>
			<nail x="-8" y="34"/>
			<nail x="-127" y="34"/>
		</transition>
		<transition id="id12" controllable="false">
			<source ref="id9"/>
			<target ref="id10"/>
			<label kind="guard" x="-119" y="-102">d &gt;= dryL[i]</label>
			<label kind="assignment" x="-119" y="-85">d = 0,
rain = rainmax[i]*uniform(1 - e, 1 + e)</label>
			<nail x="-136" y="-51"/>
			<nail x="0" y="-51"/>
		</transition>
	</template>
	<system>system Pond, Rain, Controller, CostFunction, UrbanCatchment;</system>
	<queries>
		<query>
			<formula>// Random control</formula>
			<comment/>
		</query>
		<query>
			<formula>simulate 10 [&lt;=72*h] {w}</formula>
			<comment>Set in options -&gt; statistical parameters the 'discretization step for hybrid systems' to 
0.5 to speed up calculation.</comment>
		</query>
		<query>
			<formula>E[&lt;=72*h; 100](max:o)</formula>
			<comment>Set in options -&gt; statistical parameters the 'discretization step for hybrid systems' to 
0.5 to speed up calculation.</comment>
		</query>
		<query>
			<formula/>
			<comment/>
		</query>
		<query>
			<formula>// Optimal control</formula>
			<comment/>
		</query>
		<query>
			<formula>strategy opt = minE (c) [&lt;=72*h]: &lt;&gt; (t==72*h &amp;&amp; o &lt;= 0)</formula>
			<comment>Notice that with o being monotonically increasing, the []o &lt;= 0 equals &lt;&gt;o &lt;= 0. Therefore, we can combine the synthesis 
of a safe and optimal strategy a single query.
Set in options -&gt; statistical parameters the 'discretization step for hybrid systems' to 
0.5 to speed up calculation.
Set in options -&gt; learning parameters the first four parameters to 40, 100, 20, 20 (in that order) 
to speed up the calculation.
3000 runs in approximately 2.5 minutes.</comment>
		</query>
		<query>
			<formula>E[&lt;=72*h; 1000] (max:0) under opt</formula>
			<comment>Should be 0, as we synthesized a strategy with guarantees on this variable.
Set in options -&gt; statistical parameters the 'discretization step for hybrid systems' to 
0.5 to speed up calculation.</comment>
		</query>
		<query>
			<formula>E[&lt;=72*h; 1000] (max:c) under opt</formula>
			<comment>Approximately 2480.
Set in options -&gt; statistical parameters the 'discretization step for hybrid systems' to 
0.5 to speed up calculation.</comment>
		</query>
		<query>
			<formula>simulate 10 [&lt;=72*h] {w} under opt</formula>
			<comment>Set in options -&gt; statistical parameters the 'discretization step for hybrid systems' to 
0.5 to speed up calculation.</comment>
		</query>
	</queries>
</nta>
